server:
  port: ${NODE_PORT}

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      boot:
        allow_jdbc_metadata_access=false
    hibernate:
      show-sql: true

  liquibase:
    change-log: db/changelog/changelog-master.yaml

  kafka:
    bootstrap-servers: ${KAFKA_URL}
    producer:
      bootstrap-servers: ${KAFKA_URL}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        enable:
          idempotence: true

    consumer:
      bootstrap-servers: ${KAFKA_URL}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: messages-to-bot-consumers
      properties:
        spring:
          json:
            trusted:
              packages: com.vlat.kafkaMessage

kafka:
  topics:
    text-message:
      name: text-message-topic
    command-message:
      name: command-message-topic
    answer-message:
      name: answer-message-topic
    file-message:
      name: file-message-topic
    search-message:
      name: search-message-topic
