server:
  port: ${DISPATCHER_PORT}

bot:
  username: ${TG_BOT_USERNAME}
  token: ${TG_BOT_TOKEN}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_URL}
    producer:
      bootstrap-servers: ${KAFKA_URL}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        enable:
          idempotence: true

    consumer:
      bootstrap-servers: ${KAFKA_URL}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: messages-to-user-consumers
      properties:
        spring:
          json:
            trusted:
              packages: com.vlat.kafkaMessage

  data:
    redis:
      host: ${REDIS_LINKS_URL}
      port: 6379
      #${REDIS_LINKS_PORT}

kafka:
  topics:
    text-message:
      name: text-message-topic
      partitions: 5
      replication-factor: 1
      min-insync-replicas: 1
    command-message:
      name: command-message-topic
      partitions: 3
      replication-factor: 1
      min-insync-replicas: 1
    answer-message:
      name: answer-message-topic
      partitions: 5
      replication-factor: 1
      min-insync-replicas: 1
    file-message:
      name: file-message-topic
      partitions: 3
      replication-factor: 1
      min-insync-replicas: 1
    search-message:
      name: search-message-topic
      partitions: 3
      replication-factor: 1
      min-insync-replicas: 1
